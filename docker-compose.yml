services:
  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: inventario
      POSTGRES_PASSWORD: inventario123
      POSTGRES_DB: inventario
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  backend:
    build:
      context: ./backend
    restart: always
    depends_on:
      - db
    environment:
      DATABASE_URL: "postgresql://inventario:inventario123@db:5432/inventario"
    ports:
      - "3001:3001"
    volumes:
      - ./certs/dev-cert.pem:/app/certs/dev-cert.pem:ro
      - ./certs/dev-key.pem:/app/certs/dev-key.pem:ro
    command: >
      sh -c "
        chmod +x ./wait-for-it.sh &&
        ./wait-for-it.sh db:5432 --timeout=60 --strict &&
        echo 'ðŸ”¨ Pushing schema.prisma â†’ DBâ€¦' &&
        npx prisma db push --accept-data-loss &&
        echo 'ðŸš€ Iniciando servidorâ€¦' &&
        npm run start
      "

  frontend:
    build:
      context: ./frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "5173:5173"
    env_file:
      - ./frontend/.env
    volumes:
      - ./certs/dev-cert.pem:/app/certs/dev-cert.pem:ro
      - ./certs/dev-key.pem:/app/certs/dev-key.pem:ro
    environment:
      VITE_HTTPS: "true"
      VITE_SSL_CERT: "/app/certs/dev-cert.pem"
      VITE_SSL_KEY: "/app/certs/dev-key.pem"

volumes:
  postgres-data:
